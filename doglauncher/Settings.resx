<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAIAAABMXPacAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMS4zjST9ZwAAA5hJREFUeF7tkcuN
        20AQBQnYuW0Cm5YAZ6GD09mDc9mDPUYJEkAIIjmcT7/XKrwLwcOgq5Y6Pj+W62X5+eP2mZkioagoQsZR
        Hvv+Wv7+WX7/yt6gnF8kFBVFyKAGd/ssc4O7fTaiwco+y9lgZZ/1bfDUPsvW4Kl91qvBC/ssT4MX9ln7
        Bpv2WYYGm/ZZywY77TPvBjvtszYNDtlnrg0O2WdnG1TYZ34NKuyz+gbV9plTg2r7rKbBSfvMo8FJ++xY
        gyb2mXqDJvbZ3gYN7TPdBg3ts+0Gze0zxQbN7bNXDTrZZ1oNOtlnzxt0tc9UGnS1z9YNBthn8RsMsM8e
        DYbZZ5EbDLPPbg2ul/WP3ovZYLB9VuTPeThag8kSkjcIcX7aBoEOT9gg3MmpGgQ9NkmD0GfaNxA40LiB
        zGmWDcSOMmsgeY5NA+FDDBrInyB9gLx9ED3DxD7IHWNlH4ROMrQPEofZ2ofg55nbh7BHprAPAU9NZB9C
        HZzOPgQ5O6l9mH58avswUcHb/o1ZIt72H0xpMHhx7YN3g+j2wbWBhn3wa6BkH5wa6NkHjwaq9kG9gbZ9
        0G3gYB8UG/jYB60GbvZBpYGnfYjfwNk+RG7gbx9iNshiH6I1yGUf4jTIaB8iNMhrH+Y2yG4fZjV427/x
        DjCTWfZZ9gZz7bO8DSLYZxkbxLHPcjWIZp9laRDTPvNvENk+c24Q3z7zbKBin7k10LLPfBoo2mcODXTt
        M+0G6vaZagMP+0yvgZN9ptTAzz7TaOBqn0Vv4G2fxW0wxX55ccqj4RrMsl/enfh0FKYrSN0gyPFJG4Q6
        O12DgAcnahD21BQNgh9p3kDiPNsGQocZNpA7yaqB6DEmDaTPkG8gf4D0CQb2QfIQG/sgdo6ZfZA5ytI+
        CJxmbB9CH2hvH4KemcQ+hDs2lX0IdHJC+xDi8LT2YfL5ye3DTAnXy/pH70WzD1MaFPnL58fy/bX+0W8x
        7cPgBkV7kf+fYQ0i24dhDR72YUCD+PZhQIO1fejaQMU+dG3w3D50aqBlHzo1eGUfmjdQtA/NG2zbh4YN
        dO1DwwZ77UOTBur2oUmDY/bhZAMP+3CyQY19qG7gZB+qG9Tbh4oGfvahosFZ+3Cogat9ONSgjX3Y2cDb
        Puxs0NI+bDbIYB82G7S3Dy8a5LEPLxr0sg9PG2SzD08b9LUPqwY57cOqwQj7cG+Q2T7cG4yzD+Wx6yW7
        fSgSiopK+8vyD4o8ux/mYobYAAAAAElFTkSuQmCC
</value>
  </data>
</root>